/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import controller.CrudProductoController;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Esteban
 */
public class CrudProducto extends javax.swing.JFrame {

    DefaultTableModel modelo;
    CrudProductoController crudProductoController;
    /**
     * Creates new form CrudProductos
     */
    public CrudProducto() {
        initComponents();
        crudProductoController = new CrudProductoController();
        modelo = new DefaultTableModel();
        modelo.addColumn("Codigo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Valor unitario");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Tipo");
        modelo.addColumn("Fecha vencimiento");
        modelo.addColumn("Codigo Aprobacion");
        modelo.addColumn("Temperatura Refri");
        modelo.addColumn("Fecha Envasado");
        modelo.addColumn("Peso");
        modelo.addColumn("Pais");
        this.tabla.setModel(modelo);
        labelDato1.setText("");
        textDato1.setEnabled(false);
        labelDato2.setText("");
        textDato2.setEnabled(false);
        labelPais.setText("");
        dropDownPais.setEnabled(false);
        String [][] string = crudProductoController.readListaProducto();
        translateTable(string);
    }

    public void translateTable(String[][] info){
        for(int i = 0; i<info.length;i++){
            if(!(info[i][5].equals("Perecederos"))){
               info[i][6] = null;
            }
            if(!(info[i][5].equals("Refrigerados"))){
               info[i][7] = null;
               info[i][8] = null;
            }
            if(!(info[i][5].equals("Envasados"))){
               info[i][9] = null;
               info[i][10] = null;
               info[i][11] = null;
            }
        }
        for(int i = 0; i<info.length; i++){
            modelo.addRow(info[i]);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        botonAgregar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        botonBorrar = new javax.swing.JButton();
        labelCodigo = new javax.swing.JLabel();
        textCodigo = new javax.swing.JTextField();
        labelNombre = new javax.swing.JLabel();
        textNombre = new javax.swing.JTextField();
        labelDescripcion = new javax.swing.JLabel();
        textDescripcion = new javax.swing.JTextField();
        labelValor = new javax.swing.JLabel();
        textValor = new javax.swing.JTextField();
        labelCantidad = new javax.swing.JLabel();
        textCantidad = new javax.swing.JTextField();
        labelTipo = new javax.swing.JLabel();
        labelDato1 = new javax.swing.JLabel();
        textDato1 = new javax.swing.JTextField();
        labelDato2 = new javax.swing.JLabel();
        labelPais = new javax.swing.JLabel();
        dropDownPais = new javax.swing.JComboBox<>();
        labelCampo = new javax.swing.JLabel();
        dropDownCampo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        textFilaEliminacion = new javax.swing.JTextField();
        labelValorEditar = new javax.swing.JLabel();
        textValorEditar = new javax.swing.JTextField();
        dropDownTipo = new javax.swing.JComboBox<>();
        textDato2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Descripcion", "Valor unitario", "Cantidad", "Tipo", "Fecha vencimiento", "Codigo aprobacion", "Temperatura refri", "Fecha envasado", "Peso", "Pais"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        jButton1.setLabel("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botonAgregar.setLabel("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonEditar.setLabel("Editar");
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonBorrar.setLabel("Borrar");
        botonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBorrarActionPerformed(evt);
            }
        });

        labelCodigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCodigo.setText("Codigo:");
        labelCodigo.setToolTipText("");

        labelNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNombre.setText("Nombre:");

        labelDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDescripcion.setText("Descripcion:");

        labelValor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelValor.setText("Valor:");

        labelCantidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCantidad.setText("Cantidad:");

        labelTipo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTipo.setText("Tipo:");

        labelDato1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDato1.setText("Dato1:");

        labelDato2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDato2.setText("Dato2:");

        labelPais.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPais.setText("Pais:");

        dropDownPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Colombia", "Argentina", "Chile", "Ecuador", "Peru" }));
        dropDownPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownPaisActionPerformed(evt);
            }
        });

        labelCampo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelCampo.setText("Campo:");

        dropDownCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Codigo", "Nombre", "Descripcion", "Valor", "Cantidad", "Tipo", "Fecha Vencimiento", "Codigo aprobacion", "Temperatura", "Fecha envasado", "Peso", "Pais" }));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Fila:");

        labelValorEditar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelValorEditar.setText("Valor:");

        dropDownTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Perecederos", "Refrigerados", "Envasados" }));
        dropDownTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownTipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelValor, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textDescripcion)
                                    .addComponent(textValor)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textNombre)
                                    .addComponent(textCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropDownTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(labelDato1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelPais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelDato2, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textDato1)
                                .addComponent(textDato2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dropDownPais, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCampo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelValorEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textValorEditar)
                            .addComponent(dropDownCampo, 0, 130, Short.MAX_VALUE)
                            .addComponent(textFilaEliminacion))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(288, 288, 288)
                        .addComponent(botonBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(205, 205, 205)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelCodigo)
                                    .addComponent(textCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelNombre)
                                    .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelDescripcion)
                                    .addComponent(textDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelCantidad)
                                    .addComponent(textCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelTipo)
                                    .addComponent(dropDownTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelValor)
                            .addComponent(textValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(textFilaEliminacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropDownCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCampo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelValorEditar)
                            .addComponent(textValorEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDato1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDato1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDato2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelDato2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dropDownPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPais))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEditar)
                    .addComponent(botonBorrar)
                    .addComponent(botonAgregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBorrarActionPerformed
        int fila = tabla.getSelectedRow();
        if(fila >=0){
            modelo.removeRow(fila);
            crudProductoController.deleteProducto(fila);
        }
        crudProductoController.writeListaProducto();
    }//GEN-LAST:event_botonBorrarActionPerformed

    private void dropDownPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownPaisActionPerformed
        
    }//GEN-LAST:event_dropDownPaisActionPerformed
    
    private boolean verifyEmpty(){
        return !(textCodigo.getText().equals("") && textNombre.getText().equals("") && textDescripcion.getText().equals("") 
                && textValor.getText().equals("") && textCantidad.getText().equals("") 
                && dropDownTipo.getSelectedItem().equals("Seleccionar"));
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        InterfazBase interfazBase = new InterfazBase();
        interfazBase.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        if(verifyEmpty()){
            String[] info = new String[12];
            info[0]=textCodigo.getText();
            info[1]=textNombre.getText();
            info[2]=textDescripcion.getText();
            info[3]=textValor.getText();
            info[4]=textCantidad.getText();
            String aux = dropDownTipo.getSelectedItem().toString();
            info[5]= aux;
            if(aux == "Perecederos"){
                info[6] = textDato1.getText();
                textDato1.setText("");
                labelDato1.setText("");
                textDato1.setEnabled(false);
            }else{
                if(aux == "Refrigerados"){
                    info[7] = textDato1.getText();
                    info[8] = textDato2.getText();
                    textDato1.setText("");
                    textDato2.setText("");
                    labelDato1.setText("");
                    textDato1.setEnabled(false);
                    labelDato2.setText("");
                    textDato2.setEnabled(false);
                }else{
                    if(aux == "Envasados"){
                        info[9] = textDato1.getText();
                        info[10] = textDato2.getText();
                        info[11] = dropDownPais.getSelectedItem().toString();
                        textDato1.setText("");
                        textDato2.setText("");
                        dropDownPais.setSelectedIndex(0);
                        labelDato1.setText("");
                        textDato1.setEnabled(false);
                        labelDato2.setText("");
                        textDato2.setEnabled(false);
                        labelPais.setText("");
                        dropDownPais.setEnabled(false);
                    }
                }
            }
            modelo.addRow(info);
            
            textCodigo.setText("");
            textNombre.setText("");
            textDescripcion.setText("");
            textValor.setText("");
            textCantidad.setText("");
            dropDownTipo.setSelectedIndex(0);
            crudProductoController.addProducto(info);
            crudProductoController.writeListaProducto();
        }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void dropDownTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownTipoActionPerformed
        String aux = dropDownTipo.getSelectedItem().toString();
        if(aux == "Perecederos"){
            labelDato1.setText("Fecha:");
            textDato1.setEnabled(true);
            labelDato2.setText("");
            textDato2.setEnabled(false);
            labelPais.setText("");
            dropDownPais.setEnabled(false);
        }else{
            if(aux == "Refrigerados"){
                labelDato1.setText("Codigo:");
                labelDato2.setText("Temperatura:");
                textDato1.setEnabled(true);
                textDato2.setEnabled(true);
                labelPais.setText("");
                dropDownPais.setEnabled(false);
            }else{
                if(aux == "Envasados"){
                    labelDato1.setText("Fecha:");
                    labelDato2.setText("Peso:");
                    textDato1.setEnabled(true);
                    textDato2.setEnabled(true);
                    labelPais.setText("Pais: ");
                    dropDownPais.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_dropDownTipoActionPerformed

    private boolean verifyDataChanged(){
        return !(textFilaEliminacion.getText().equals("") && textValorEditar.getText().equals("") 
                && dropDownCampo.getSelectedItem().equals("Seleccionar"));
    }
    
    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        if(verifyDataChanged()){
            int fila = Integer.parseInt(textFilaEliminacion.getText());
            int columna = dropDownCampo.getSelectedIndex();
            String valor = textValorEditar.getText();
            if(columna == 6 && ( valor.equals("Perecederos") || valor.equals("Refrigerados") || valor.equals("Envasados"))){
                modelo.setValueAt(valor, fila-1, columna-1);
                crudProductoController.editProducto(fila-1, columna, valor);
                crudProductoController.writeListaProducto();
                if (!(valor.equals("Perecederos"))){
                    modelo.setValueAt(null, fila-1, 6);
                    crudProductoController.editProducto(fila-1, 7, null);
                    crudProductoController.writeListaProducto();
                }
                if(!(valor.equals("Refrigerados"))){
                    modelo.setValueAt(null, fila-1, 7);
                    modelo.setValueAt(null, fila-1, 8);
                    crudProductoController.editProducto(fila-1, 8, null);
                    crudProductoController.editProducto(fila-1, 9, "0");
                    crudProductoController.writeListaProducto();
                }
                if(!(valor.equals("Envasados"))){
                    modelo.setValueAt(null, fila-1, 9);
                    modelo.setValueAt(null, fila-1, 10);
                    modelo.setValueAt(null, fila-1, 11);
                    crudProductoController.editProducto(fila-1, 10, null);
                    crudProductoController.editProducto(fila-1, 11, "0");
                    crudProductoController.editProducto(fila-1, 12, null);                        
                    crudProductoController.writeListaProducto();
                }
            }else{
                if(columna == 7 && modelo.getValueAt(fila-1, 5).equals("Perecederos")){
                    modelo.setValueAt(valor, fila-1, columna-1);
                    crudProductoController.editProducto(fila-1, columna, valor);
                    crudProductoController.writeListaProducto();
                }else{
                    if((columna == 8 || columna == 9) && modelo.getValueAt(fila-1, 5).equals("Refrigerados")){
                        modelo.setValueAt(valor, fila-1, columna-1);
                        crudProductoController.editProducto(fila-1, columna, valor);
                        crudProductoController.writeListaProducto();
                    }else{
                        if((columna == 10 || columna == 11) && modelo.getValueAt(fila-1, 5).equals("Envasados")){
                            modelo.setValueAt(valor, fila-1, columna-1);
                            crudProductoController.editProducto(fila-1, columna, valor);
                            crudProductoController.writeListaProducto();
                        }else{
                            if(columna == 12 && modelo.getValueAt(fila-1, 5).equals("Envasados") && (valor.equals("Colombia") || valor.equals("Ecuador") || valor.equals("Chile") || valor.equals("Argentina") || valor.equals("Peru"))){
                                modelo.setValueAt(valor, fila-1, columna-1);
                                crudProductoController.editProducto(fila-1, columna, valor);
                                crudProductoController.writeListaProducto();
                            }else{
                                if(columna>0 && columna<6){
                                    modelo.setValueAt(valor, fila-1, columna-1);
                                    crudProductoController.editProducto(fila-1, columna, valor);
                                    crudProductoController.writeListaProducto();
                                }
                            }
                        }
                    }
                }
            }
        }    
    }//GEN-LAST:event_botonEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrudProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBorrar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JComboBox<String> dropDownCampo;
    private javax.swing.JComboBox<String> dropDownPais;
    private javax.swing.JComboBox<String> dropDownTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCampo;
    private javax.swing.JLabel labelCantidad;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelDato1;
    private javax.swing.JLabel labelDato2;
    private javax.swing.JLabel labelDescripcion;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelPais;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JLabel labelValor;
    private javax.swing.JLabel labelValorEditar;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField textCantidad;
    private javax.swing.JTextField textCodigo;
    private javax.swing.JTextField textDato1;
    private javax.swing.JTextField textDato2;
    private javax.swing.JTextField textDescripcion;
    private javax.swing.JTextField textFilaEliminacion;
    private javax.swing.JTextField textNombre;
    private javax.swing.JTextField textValor;
    private javax.swing.JTextField textValorEditar;
    // End of variables declaration//GEN-END:variables
}
